抽象父类的注意事项：子类要在构造方法中传递额外参数的问题
public abstract class AbstractCardManager implements {
    public AbstractCardManager(Context context, Context launcherContext) {
        initInterface(context, launcherContext);
        initManager(context, launcherContext);
    }
}


View测量


Best Articles on Android That We Published In 2016
https://blog.mindorks.com/best-articles-on-android-that-we-published-in-2016-5131a23c43af#.64dckcwrq


Android Studio Shortcuts
https://barmij.ly/Academy/Articles/Read/Android-Studio-Shortcuts


Using SnapHelper in RecyclerView
https://blog.mindorks.com/using-snaphelper-in-recyclerview-fc616b6833e8#.4g2b3r3q0


Android Development Useful Tools
https://blog.mindorks.com/android-development-useful-tools-fd73283e82e3#.w60zw7ovb
1.Library methods count
查看库的方法数

2.APK方法数
查看apk中方法数，可以根据包名统计方法数

3.Stetho
使用Stetho配合Fast-Android-Networking来调试网络

4.LeakCanary来检测内存泄漏

Develop Android Apps Fast(er)
https://blog.mindorks.com/develop-android-apps-fast-er-f50acf7b894f#.x7lsk9zey


Amazing Open Source Android Apps
https://blog.mindorks.com/android-amazing-open-source-apps-e44f520593cc#.ap95atjca
Google提供的开源例子


减少Gradle编译时间
https://gradle.github.io/performance-guide/#_configuration
1.Easy improvements
1.1.Enable the daemon
1.2 Use lastest Gradle and JVM version
1.3 Configure on demand
1.4 Parallel builds

2.Profile--通过生成报告，观察时间都花在那了

3.Configuration
Gradle build goes through three phases: initialization, configuration, and execution. 

The important thing to understand here is that in non-native Gradle builds, configuration code 
always executes regardless of which tasks will run. 

That means any expensive work performed during configuration will permanently cripple the build, 
even for such things as gradle help and gradle tasks.


4.Dependency resolution
4.1 Dynamic and snapshot versions
4.2 Favor dependency resolution during execution(文中包含的例子很好理解)
4.3 Avoid unnecessary and unused dependencies
4.4 Miniminze repository count

5.Task execution

6. Other performance tweaks

7.Suggestions for Android builds
7.1 Use the lasted Android plugin
7.2 Invest in fast CPUs
7.3 Optimize multidex development builds
7.4 Use discretion when adding build types and flavors

未读列表
http://blog.csdn.net/maetelibom/article/details/52084085

如何调试Android Framework？ 
http://weishu.me/2016/05/30/how-to-debug-android-framework/


简洁桌面
https://github.com/orgcheng/KISS


React　学习子类
https://github.com/reactnativecn/react-native-guide


